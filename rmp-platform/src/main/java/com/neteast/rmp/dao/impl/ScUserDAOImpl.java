package com.neteast.rmp.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.neteast.rmp.dao.ScUserDAO;
import com.neteast.rmp.dao.domain.ScUser;
import com.neteast.rmp.dao.domain.ScUserExample;
import com.neteast.rmp.dao.ibatis.ext.BaseSqlMapClientDaoSupport;
import com.seraph.bi.suite.support.domain.pagination.PageBox;
import com.seraph.bi.suite.support.domain.pagination.PageObject;

@Repository
public class ScUserDAOImpl extends BaseSqlMapClientDaoSupport implements ScUserDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public ScUserDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public Integer insert(ScUser record) {
        Object newKey = getSqlMapClientTemplate().insert("sc_user.abatorgenerated_insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public int updateByPrimaryKey(ScUser record) {
        int rows = getSqlMapClientTemplate().update("sc_user.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public int updateByPrimaryKeySelective(ScUser record) {
        int rows = getSqlMapClientTemplate().update("sc_user.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public List selectByExample(ScUserExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("sc_user.abatorgenerated_selectByExample", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public List selectByExample(ScUserExample example) {
        return selectByExample(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public ScUser selectByPrimaryKey(Integer userId) {
        ScUser key = new ScUser();
        key.setUserId(userId);
        ScUser record = (ScUser) getSqlMapClientTemplate().queryForObject("sc_user.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public int deleteByExample(ScUserExample example) {
        int rows = getSqlMapClientTemplate().delete("sc_user.abatorgenerated_deleteByExample", getExampleParms(example));
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public int deleteByPrimaryKey(Integer userId) {
        ScUser key = new ScUser();
        key.setUserId(userId);
        int rows = getSqlMapClientTemplate().delete("sc_user.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getUSER_IDExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getUserId_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ID_NULL", "Y");
            } else {
                parms.put("AND_USER_ID_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ID_NOT_NULL", "Y");
            } else {
                parms.put("AND_USER_ID_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ID_EQUALS", "Y");
            } else {
                parms.put("AND_USER_ID_EQUALS", "Y");
            }
            parms.put("userId", example.getUserId());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_USER_ID_NOT_EQUALS", "Y");
            }
            parms.put("userId", example.getUserId());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ID_GT", "Y");
            } else {
                parms.put("AND_USER_ID_GT", "Y");
            }
            parms.put("userId", example.getUserId());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ID_GE", "Y");
            } else {
                parms.put("AND_USER_ID_GE", "Y");
            }
            parms.put("userId", example.getUserId());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ID_LT", "Y");
            } else {
                parms.put("AND_USER_ID_LT", "Y");
            }
            parms.put("userId", example.getUserId());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ID_LE", "Y");
            } else {
                parms.put("AND_USER_ID_LE", "Y");
            }
            parms.put("userId", example.getUserId());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getUSER_NAMEExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getUserName_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_NAME_NULL", "Y");
            } else {
                parms.put("AND_USER_NAME_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_NAME_NOT_NULL", "Y");
            } else {
                parms.put("AND_USER_NAME_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_NAME_EQUALS", "Y");
            } else {
                parms.put("AND_USER_NAME_EQUALS", "Y");
            }
            parms.put("userName", example.getUserName());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_NAME_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_USER_NAME_NOT_EQUALS", "Y");
            }
            parms.put("userName", example.getUserName());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_NAME_GT", "Y");
            } else {
                parms.put("AND_USER_NAME_GT", "Y");
            }
            parms.put("userName", example.getUserName());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_NAME_GE", "Y");
            } else {
                parms.put("AND_USER_NAME_GE", "Y");
            }
            parms.put("userName", example.getUserName());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_NAME_LT", "Y");
            } else {
                parms.put("AND_USER_NAME_LT", "Y");
            }
            parms.put("userName", example.getUserName());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_NAME_LE", "Y");
            } else {
                parms.put("AND_USER_NAME_LE", "Y");
            }
            parms.put("userName", example.getUserName());
            break;
        case ScUserExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_NAME_LIKE", "Y");
            } else {
                parms.put("AND_USER_NAME_LIKE", "Y");
            }
            parms.put("userName", example.getUserName());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getORG_CODEExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getOrgCode_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ORG_CODE_NULL", "Y");
            } else {
                parms.put("AND_ORG_CODE_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ORG_CODE_NOT_NULL", "Y");
            } else {
                parms.put("AND_ORG_CODE_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ORG_CODE_EQUALS", "Y");
            } else {
                parms.put("AND_ORG_CODE_EQUALS", "Y");
            }
            parms.put("orgCode", example.getOrgCode());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ORG_CODE_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_ORG_CODE_NOT_EQUALS", "Y");
            }
            parms.put("orgCode", example.getOrgCode());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ORG_CODE_GT", "Y");
            } else {
                parms.put("AND_ORG_CODE_GT", "Y");
            }
            parms.put("orgCode", example.getOrgCode());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ORG_CODE_GE", "Y");
            } else {
                parms.put("AND_ORG_CODE_GE", "Y");
            }
            parms.put("orgCode", example.getOrgCode());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ORG_CODE_LT", "Y");
            } else {
                parms.put("AND_ORG_CODE_LT", "Y");
            }
            parms.put("orgCode", example.getOrgCode());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ORG_CODE_LE", "Y");
            } else {
                parms.put("AND_ORG_CODE_LE", "Y");
            }
            parms.put("orgCode", example.getOrgCode());
            break;
        case ScUserExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ORG_CODE_LIKE", "Y");
            } else {
                parms.put("AND_ORG_CODE_LIKE", "Y");
            }
            parms.put("orgCode", example.getOrgCode());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getUSER_ALIASExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getUserAlias_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ALIAS_NULL", "Y");
            } else {
                parms.put("AND_USER_ALIAS_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ALIAS_NOT_NULL", "Y");
            } else {
                parms.put("AND_USER_ALIAS_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ALIAS_EQUALS", "Y");
            } else {
                parms.put("AND_USER_ALIAS_EQUALS", "Y");
            }
            parms.put("userAlias", example.getUserAlias());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ALIAS_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_USER_ALIAS_NOT_EQUALS", "Y");
            }
            parms.put("userAlias", example.getUserAlias());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ALIAS_GT", "Y");
            } else {
                parms.put("AND_USER_ALIAS_GT", "Y");
            }
            parms.put("userAlias", example.getUserAlias());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ALIAS_GE", "Y");
            } else {
                parms.put("AND_USER_ALIAS_GE", "Y");
            }
            parms.put("userAlias", example.getUserAlias());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ALIAS_LT", "Y");
            } else {
                parms.put("AND_USER_ALIAS_LT", "Y");
            }
            parms.put("userAlias", example.getUserAlias());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ALIAS_LE", "Y");
            } else {
                parms.put("AND_USER_ALIAS_LE", "Y");
            }
            parms.put("userAlias", example.getUserAlias());
            break;
        case ScUserExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_USER_ALIAS_LIKE", "Y");
            } else {
                parms.put("AND_USER_ALIAS_LIKE", "Y");
            }
            parms.put("userAlias", example.getUserAlias());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getPASSWORDExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getPassword_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PASSWORD_NULL", "Y");
            } else {
                parms.put("AND_PASSWORD_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PASSWORD_NOT_NULL", "Y");
            } else {
                parms.put("AND_PASSWORD_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PASSWORD_EQUALS", "Y");
            } else {
                parms.put("AND_PASSWORD_EQUALS", "Y");
            }
            parms.put("password", example.getPassword());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PASSWORD_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_PASSWORD_NOT_EQUALS", "Y");
            }
            parms.put("password", example.getPassword());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PASSWORD_GT", "Y");
            } else {
                parms.put("AND_PASSWORD_GT", "Y");
            }
            parms.put("password", example.getPassword());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PASSWORD_GE", "Y");
            } else {
                parms.put("AND_PASSWORD_GE", "Y");
            }
            parms.put("password", example.getPassword());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PASSWORD_LT", "Y");
            } else {
                parms.put("AND_PASSWORD_LT", "Y");
            }
            parms.put("password", example.getPassword());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PASSWORD_LE", "Y");
            } else {
                parms.put("AND_PASSWORD_LE", "Y");
            }
            parms.put("password", example.getPassword());
            break;
        case ScUserExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PASSWORD_LIKE", "Y");
            } else {
                parms.put("AND_PASSWORD_LIKE", "Y");
            }
            parms.put("password", example.getPassword());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getCELLPHONE_NUMExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getCellphoneNum_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CELLPHONE_NUM_NULL", "Y");
            } else {
                parms.put("AND_CELLPHONE_NUM_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CELLPHONE_NUM_NOT_NULL", "Y");
            } else {
                parms.put("AND_CELLPHONE_NUM_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CELLPHONE_NUM_EQUALS", "Y");
            } else {
                parms.put("AND_CELLPHONE_NUM_EQUALS", "Y");
            }
            parms.put("cellphoneNum", example.getCellphoneNum());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CELLPHONE_NUM_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_CELLPHONE_NUM_NOT_EQUALS", "Y");
            }
            parms.put("cellphoneNum", example.getCellphoneNum());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CELLPHONE_NUM_GT", "Y");
            } else {
                parms.put("AND_CELLPHONE_NUM_GT", "Y");
            }
            parms.put("cellphoneNum", example.getCellphoneNum());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CELLPHONE_NUM_GE", "Y");
            } else {
                parms.put("AND_CELLPHONE_NUM_GE", "Y");
            }
            parms.put("cellphoneNum", example.getCellphoneNum());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CELLPHONE_NUM_LT", "Y");
            } else {
                parms.put("AND_CELLPHONE_NUM_LT", "Y");
            }
            parms.put("cellphoneNum", example.getCellphoneNum());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CELLPHONE_NUM_LE", "Y");
            } else {
                parms.put("AND_CELLPHONE_NUM_LE", "Y");
            }
            parms.put("cellphoneNum", example.getCellphoneNum());
            break;
        case ScUserExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CELLPHONE_NUM_LIKE", "Y");
            } else {
                parms.put("AND_CELLPHONE_NUM_LIKE", "Y");
            }
            parms.put("cellphoneNum", example.getCellphoneNum());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getPHONE_NUMExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getPhoneNum_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PHONE_NUM_NULL", "Y");
            } else {
                parms.put("AND_PHONE_NUM_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PHONE_NUM_NOT_NULL", "Y");
            } else {
                parms.put("AND_PHONE_NUM_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PHONE_NUM_EQUALS", "Y");
            } else {
                parms.put("AND_PHONE_NUM_EQUALS", "Y");
            }
            parms.put("phoneNum", example.getPhoneNum());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PHONE_NUM_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_PHONE_NUM_NOT_EQUALS", "Y");
            }
            parms.put("phoneNum", example.getPhoneNum());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PHONE_NUM_GT", "Y");
            } else {
                parms.put("AND_PHONE_NUM_GT", "Y");
            }
            parms.put("phoneNum", example.getPhoneNum());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PHONE_NUM_GE", "Y");
            } else {
                parms.put("AND_PHONE_NUM_GE", "Y");
            }
            parms.put("phoneNum", example.getPhoneNum());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PHONE_NUM_LT", "Y");
            } else {
                parms.put("AND_PHONE_NUM_LT", "Y");
            }
            parms.put("phoneNum", example.getPhoneNum());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PHONE_NUM_LE", "Y");
            } else {
                parms.put("AND_PHONE_NUM_LE", "Y");
            }
            parms.put("phoneNum", example.getPhoneNum());
            break;
        case ScUserExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_PHONE_NUM_LIKE", "Y");
            } else {
                parms.put("AND_PHONE_NUM_LIKE", "Y");
            }
            parms.put("phoneNum", example.getPhoneNum());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getEMAILExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getEmail_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_EMAIL_NULL", "Y");
            } else {
                parms.put("AND_EMAIL_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_EMAIL_NOT_NULL", "Y");
            } else {
                parms.put("AND_EMAIL_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_EMAIL_EQUALS", "Y");
            } else {
                parms.put("AND_EMAIL_EQUALS", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_EMAIL_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_EMAIL_NOT_EQUALS", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_EMAIL_GT", "Y");
            } else {
                parms.put("AND_EMAIL_GT", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_EMAIL_GE", "Y");
            } else {
                parms.put("AND_EMAIL_GE", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_EMAIL_LT", "Y");
            } else {
                parms.put("AND_EMAIL_LT", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_EMAIL_LE", "Y");
            } else {
                parms.put("AND_EMAIL_LE", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case ScUserExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_EMAIL_LIKE", "Y");
            } else {
                parms.put("AND_EMAIL_LIKE", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getSTART_DATEExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getStartDate_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_START_DATE_NULL", "Y");
            } else {
                parms.put("AND_START_DATE_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_START_DATE_NOT_NULL", "Y");
            } else {
                parms.put("AND_START_DATE_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_START_DATE_EQUALS", "Y");
            } else {
                parms.put("AND_START_DATE_EQUALS", "Y");
            }
            parms.put("startDate", example.getStartDate());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_START_DATE_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_START_DATE_NOT_EQUALS", "Y");
            }
            parms.put("startDate", example.getStartDate());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_START_DATE_GT", "Y");
            } else {
                parms.put("AND_START_DATE_GT", "Y");
            }
            parms.put("startDate", example.getStartDate());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_START_DATE_GE", "Y");
            } else {
                parms.put("AND_START_DATE_GE", "Y");
            }
            parms.put("startDate", example.getStartDate());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_START_DATE_LT", "Y");
            } else {
                parms.put("AND_START_DATE_LT", "Y");
            }
            parms.put("startDate", example.getStartDate());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_START_DATE_LE", "Y");
            } else {
                parms.put("AND_START_DATE_LE", "Y");
            }
            parms.put("startDate", example.getStartDate());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getEND_DATEExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getEndDate_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_END_DATE_NULL", "Y");
            } else {
                parms.put("AND_END_DATE_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_END_DATE_NOT_NULL", "Y");
            } else {
                parms.put("AND_END_DATE_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_END_DATE_EQUALS", "Y");
            } else {
                parms.put("AND_END_DATE_EQUALS", "Y");
            }
            parms.put("endDate", example.getEndDate());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_END_DATE_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_END_DATE_NOT_EQUALS", "Y");
            }
            parms.put("endDate", example.getEndDate());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_END_DATE_GT", "Y");
            } else {
                parms.put("AND_END_DATE_GT", "Y");
            }
            parms.put("endDate", example.getEndDate());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_END_DATE_GE", "Y");
            } else {
                parms.put("AND_END_DATE_GE", "Y");
            }
            parms.put("endDate", example.getEndDate());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_END_DATE_LT", "Y");
            } else {
                parms.put("AND_END_DATE_LT", "Y");
            }
            parms.put("endDate", example.getEndDate());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_END_DATE_LE", "Y");
            } else {
                parms.put("AND_END_DATE_LE", "Y");
            }
            parms.put("endDate", example.getEndDate());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getACCOUNT_ENABLEDExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getAccountEnabled_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_ENABLED_NULL", "Y");
            } else {
                parms.put("AND_ACCOUNT_ENABLED_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_ENABLED_NOT_NULL", "Y");
            } else {
                parms.put("AND_ACCOUNT_ENABLED_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_ENABLED_EQUALS", "Y");
            } else {
                parms.put("AND_ACCOUNT_ENABLED_EQUALS", "Y");
            }
            parms.put("accountEnabled", example.getAccountEnabled());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_ENABLED_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_ACCOUNT_ENABLED_NOT_EQUALS", "Y");
            }
            parms.put("accountEnabled", example.getAccountEnabled());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_ENABLED_GT", "Y");
            } else {
                parms.put("AND_ACCOUNT_ENABLED_GT", "Y");
            }
            parms.put("accountEnabled", example.getAccountEnabled());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_ENABLED_GE", "Y");
            } else {
                parms.put("AND_ACCOUNT_ENABLED_GE", "Y");
            }
            parms.put("accountEnabled", example.getAccountEnabled());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_ENABLED_LT", "Y");
            } else {
                parms.put("AND_ACCOUNT_ENABLED_LT", "Y");
            }
            parms.put("accountEnabled", example.getAccountEnabled());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_ENABLED_LE", "Y");
            } else {
                parms.put("AND_ACCOUNT_ENABLED_LE", "Y");
            }
            parms.put("accountEnabled", example.getAccountEnabled());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getACCOUNT_EXPIREDExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getAccountExpired_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_EXPIRED_NULL", "Y");
            } else {
                parms.put("AND_ACCOUNT_EXPIRED_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_EXPIRED_NOT_NULL", "Y");
            } else {
                parms.put("AND_ACCOUNT_EXPIRED_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_EXPIRED_EQUALS", "Y");
            } else {
                parms.put("AND_ACCOUNT_EXPIRED_EQUALS", "Y");
            }
            parms.put("accountExpired", example.getAccountExpired());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_EXPIRED_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_ACCOUNT_EXPIRED_NOT_EQUALS", "Y");
            }
            parms.put("accountExpired", example.getAccountExpired());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_EXPIRED_GT", "Y");
            } else {
                parms.put("AND_ACCOUNT_EXPIRED_GT", "Y");
            }
            parms.put("accountExpired", example.getAccountExpired());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_EXPIRED_GE", "Y");
            } else {
                parms.put("AND_ACCOUNT_EXPIRED_GE", "Y");
            }
            parms.put("accountExpired", example.getAccountExpired());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_EXPIRED_LT", "Y");
            } else {
                parms.put("AND_ACCOUNT_EXPIRED_LT", "Y");
            }
            parms.put("accountExpired", example.getAccountExpired());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_EXPIRED_LE", "Y");
            } else {
                parms.put("AND_ACCOUNT_EXPIRED_LE", "Y");
            }
            parms.put("accountExpired", example.getAccountExpired());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getACCOUNT_LOCKEDExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getAccountLocked_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_LOCKED_NULL", "Y");
            } else {
                parms.put("AND_ACCOUNT_LOCKED_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_LOCKED_NOT_NULL", "Y");
            } else {
                parms.put("AND_ACCOUNT_LOCKED_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_LOCKED_EQUALS", "Y");
            } else {
                parms.put("AND_ACCOUNT_LOCKED_EQUALS", "Y");
            }
            parms.put("accountLocked", example.getAccountLocked());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_LOCKED_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_ACCOUNT_LOCKED_NOT_EQUALS", "Y");
            }
            parms.put("accountLocked", example.getAccountLocked());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_LOCKED_GT", "Y");
            } else {
                parms.put("AND_ACCOUNT_LOCKED_GT", "Y");
            }
            parms.put("accountLocked", example.getAccountLocked());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_LOCKED_GE", "Y");
            } else {
                parms.put("AND_ACCOUNT_LOCKED_GE", "Y");
            }
            parms.put("accountLocked", example.getAccountLocked());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_LOCKED_LT", "Y");
            } else {
                parms.put("AND_ACCOUNT_LOCKED_LT", "Y");
            }
            parms.put("accountLocked", example.getAccountLocked());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_ACCOUNT_LOCKED_LE", "Y");
            } else {
                parms.put("AND_ACCOUNT_LOCKED_LE", "Y");
            }
            parms.put("accountLocked", example.getAccountLocked());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getCREDENTIALS_EXPIREDExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        switch (example.getCredentialsExpired_Indicator()) {
        case ScUserExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CREDENTIALS_EXPIRED_NULL", "Y");
            } else {
                parms.put("AND_CREDENTIALS_EXPIRED_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CREDENTIALS_EXPIRED_NOT_NULL", "Y");
            } else {
                parms.put("AND_CREDENTIALS_EXPIRED_NOT_NULL", "Y");
            }
            break;
        case ScUserExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CREDENTIALS_EXPIRED_EQUALS", "Y");
            } else {
                parms.put("AND_CREDENTIALS_EXPIRED_EQUALS", "Y");
            }
            parms.put("credentialsExpired", example.getCredentialsExpired());
            break;
        case ScUserExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CREDENTIALS_EXPIRED_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_CREDENTIALS_EXPIRED_NOT_EQUALS", "Y");
            }
            parms.put("credentialsExpired", example.getCredentialsExpired());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CREDENTIALS_EXPIRED_GT", "Y");
            } else {
                parms.put("AND_CREDENTIALS_EXPIRED_GT", "Y");
            }
            parms.put("credentialsExpired", example.getCredentialsExpired());
            break;
        case ScUserExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CREDENTIALS_EXPIRED_GE", "Y");
            } else {
                parms.put("AND_CREDENTIALS_EXPIRED_GE", "Y");
            }
            parms.put("credentialsExpired", example.getCredentialsExpired());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CREDENTIALS_EXPIRED_LT", "Y");
            } else {
                parms.put("AND_CREDENTIALS_EXPIRED_LT", "Y");
            }
            parms.put("credentialsExpired", example.getCredentialsExpired());
            break;
        case ScUserExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_CREDENTIALS_EXPIRED_LE", "Y");
            } else {
                parms.put("AND_CREDENTIALS_EXPIRED_LE", "Y");
            }
            parms.put("credentialsExpired", example.getCredentialsExpired());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    private Map getExampleParms(ScUserExample example) {
        Map parms = new HashMap();
        parms.putAll(getUSER_IDExampleParms(example));
        parms.putAll(getUSER_NAMEExampleParms(example));
        parms.putAll(getORG_CODEExampleParms(example));
        parms.putAll(getUSER_ALIASExampleParms(example));
        parms.putAll(getPASSWORDExampleParms(example));
        parms.putAll(getCELLPHONE_NUMExampleParms(example));
        parms.putAll(getPHONE_NUMExampleParms(example));
        parms.putAll(getEMAILExampleParms(example));
        parms.putAll(getSTART_DATEExampleParms(example));
        parms.putAll(getEND_DATEExampleParms(example));
        parms.putAll(getACCOUNT_ENABLEDExampleParms(example));
        parms.putAll(getACCOUNT_EXPIREDExampleParms(example));
        parms.putAll(getACCOUNT_LOCKEDExampleParms(example));
        parms.putAll(getCREDENTIALS_EXPIREDExampleParms(example));
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public int selectCountByExample(ScUserExample example) {
        Map parms = getExampleParms(example);
        int count = ((Integer)getSqlMapClientTemplate().queryForObject("sc_user.abatorgenerated_selectCountByExample", parms)).intValue();
        return count;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public PageBox selectByExampleWithPaging(ScUserExample example, int pageSize, int pageNum, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        PageBox pageBox = new PageBox();
        PageObject pageObject = new PageObject();
        pageObject.setPageSize(pageSize);
        pageObject.setPageIndex(pageNum);
        int itemAmount = selectCountByExample(example);
        pageObject.setItemAmount(itemAmount);
        List pageList = null;
        if (pageObject.getBeginIndex() <= pageObject.getItemAmount()) {
            pageList = (getSqlMapClientTemplate().queryForList("sc_user.abatorgenerated_selectByExample", parms, pageObject.getBeginIndex() - 1, pageSize));
        }
        pageBox.setPageObject(pageObject);
        pageBox.setPageList(pageList);
        return pageBox;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public PageBox selectByExampleWithPaging(ScUserExample example, int pageSize, int pageNum) {
        return selectByExampleWithPaging(example, pageSize, pageNum, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table sc_user
     *
     * @abatorgenerated Tue Sep 20 22:24:44 CST 2011
     */
    public int updateByPrimaryKeyForCgs(ScUser record) {
        int rows = getSqlMapClientTemplate().update("sc_user.abatorgenerated_updateByPrimaryKeyForCgs", record);
        return rows;
    }
}